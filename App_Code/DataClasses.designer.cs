#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ChiefChefDB")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void Inserte_Employee_RolePremission_Mapping(e_Employee_RolePremission_Mapping instance);
  partial void Updatee_Employee_RolePremission_Mapping(e_Employee_RolePremission_Mapping instance);
  partial void Deletee_Employee_RolePremission_Mapping(e_Employee_RolePremission_Mapping instance);
  partial void Inserte_EmployeePermission(e_EmployeePermission instance);
  partial void Updatee_EmployeePermission(e_EmployeePermission instance);
  partial void Deletee_EmployeePermission(e_EmployeePermission instance);
  partial void Inserte_EmployeeRole(e_EmployeeRole instance);
  partial void Updatee_EmployeeRole(e_EmployeeRole instance);
  partial void Deletee_EmployeeRole(e_EmployeeRole instance);
  partial void Inserte_EmployeeRole_Mapping(e_EmployeeRole_Mapping instance);
  partial void Updatee_EmployeeRole_Mapping(e_EmployeeRole_Mapping instance);
  partial void Deletee_EmployeeRole_Mapping(e_EmployeeRole_Mapping instance);
  partial void Inserts_SMTPInfo(s_SMTPInfo instance);
  partial void Updates_SMTPInfo(s_SMTPInfo instance);
  partial void Deletes_SMTPInfo(s_SMTPInfo instance);
  partial void InsertSinglePage(SinglePage instance);
  partial void UpdateSinglePage(SinglePage instance);
  partial void DeleteSinglePage(SinglePage instance);
  partial void InsertSystemSetting(SystemSetting instance);
  partial void UpdateSystemSetting(SystemSetting instance);
  partial void DeleteSystemSetting(SystemSetting instance);
  partial void InsertBanner(Banner instance);
  partial void UpdateBanner(Banner instance);
  partial void DeleteBanner(Banner instance);
  partial void InsertViewCount(ViewCount instance);
  partial void UpdateViewCount(ViewCount instance);
  partial void DeleteViewCount(ViewCount instance);
  partial void InsertActivityContactUser(ActivityContactUser instance);
  partial void UpdateActivityContactUser(ActivityContactUser instance);
  partial void DeleteActivityContactUser(ActivityContactUser instance);
  partial void InsertNews(News instance);
  partial void UpdateNews(News instance);
  partial void DeleteNews(News instance);
  partial void InsertHighlights(Highlights instance);
  partial void UpdateHighlights(Highlights instance);
  partial void DeleteHighlights(Highlights instance);
  partial void InsertCompetitionGroup(CompetitionGroup instance);
  partial void UpdateCompetitionGroup(CompetitionGroup instance);
  partial void DeleteCompetitionGroup(CompetitionGroup instance);
  partial void InsertCompetitionGroupReturnLog(CompetitionGroupReturnLog instance);
  partial void UpdateCompetitionGroupReturnLog(CompetitionGroupReturnLog instance);
  partial void DeleteCompetitionGroupReturnLog(CompetitionGroupReturnLog instance);
  partial void Inserte_Employees(e_Employees instance);
  partial void Updatee_Employees(e_Employees instance);
  partial void Deletee_Employees(e_Employees instance);
  partial void InsertSysLog(SysLog instance);
  partial void UpdateSysLog(SysLog instance);
  partial void DeleteSysLog(SysLog instance);
  partial void InsertCompetitionGroupMember(CompetitionGroupMember instance);
  partial void UpdateCompetitionGroupMember(CompetitionGroupMember instance);
  partial void DeleteCompetitionGroupMember(CompetitionGroupMember instance);
  partial void InsertActivity(Activity instance);
  partial void UpdateActivity(Activity instance);
  partial void DeleteActivity(Activity instance);
  partial void InsertFinalCompetition(FinalCompetition instance);
  partial void UpdateFinalCompetition(FinalCompetition instance);
  partial void DeleteFinalCompetition(FinalCompetition instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<e_Employee_RolePremission_Mapping> e_Employee_RolePremission_Mapping
	{
		get
		{
			return this.GetTable<e_Employee_RolePremission_Mapping>();
		}
	}
	
	public System.Data.Linq.Table<e_EmployeePermission> e_EmployeePermission
	{
		get
		{
			return this.GetTable<e_EmployeePermission>();
		}
	}
	
	public System.Data.Linq.Table<e_EmployeeRole> e_EmployeeRole
	{
		get
		{
			return this.GetTable<e_EmployeeRole>();
		}
	}
	
	public System.Data.Linq.Table<e_EmployeeRole_Mapping> e_EmployeeRole_Mapping
	{
		get
		{
			return this.GetTable<e_EmployeeRole_Mapping>();
		}
	}
	
	public System.Data.Linq.Table<s_SMTPInfo> s_SMTPInfo
	{
		get
		{
			return this.GetTable<s_SMTPInfo>();
		}
	}
	
	public System.Data.Linq.Table<SinglePage> SinglePage
	{
		get
		{
			return this.GetTable<SinglePage>();
		}
	}
	
	public System.Data.Linq.Table<SystemSetting> SystemSetting
	{
		get
		{
			return this.GetTable<SystemSetting>();
		}
	}
	
	public System.Data.Linq.Table<Banner> Banner
	{
		get
		{
			return this.GetTable<Banner>();
		}
	}
	
	public System.Data.Linq.Table<ViewCount> ViewCount
	{
		get
		{
			return this.GetTable<ViewCount>();
		}
	}
	
	public System.Data.Linq.Table<ActivityContactUser> ActivityContactUser
	{
		get
		{
			return this.GetTable<ActivityContactUser>();
		}
	}
	
	public System.Data.Linq.Table<News> News
	{
		get
		{
			return this.GetTable<News>();
		}
	}
	
	public System.Data.Linq.Table<Highlights> Highlights
	{
		get
		{
			return this.GetTable<Highlights>();
		}
	}
	
	public System.Data.Linq.Table<CompetitionGroup> CompetitionGroup
	{
		get
		{
			return this.GetTable<CompetitionGroup>();
		}
	}
	
	public System.Data.Linq.Table<CompetitionGroupReturnLog> CompetitionGroupReturnLog
	{
		get
		{
			return this.GetTable<CompetitionGroupReturnLog>();
		}
	}
	
	public System.Data.Linq.Table<e_Employees> e_Employees
	{
		get
		{
			return this.GetTable<e_Employees>();
		}
	}
	
	public System.Data.Linq.Table<SysLog> SysLog
	{
		get
		{
			return this.GetTable<SysLog>();
		}
	}
	
	public System.Data.Linq.Table<CompetitionGroupMember> CompetitionGroupMember
	{
		get
		{
			return this.GetTable<CompetitionGroupMember>();
		}
	}
	
	public System.Data.Linq.Table<Activity> Activity
	{
		get
		{
			return this.GetTable<Activity>();
		}
	}
	
	public System.Data.Linq.Table<FinalCompetition> FinalCompetition
	{
		get
		{
			return this.GetTable<FinalCompetition>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_Employee_RolePremission_Mapping")]
public partial class e_Employee_RolePremission_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PermissionId;
	
	private int _RoleId;
	
	private EntityRef<e_EmployeePermission> _e_EmployeePermission;
	
	private EntityRef<e_EmployeeRole> _e_EmployeeRole;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
	
	public e_Employee_RolePremission_Mapping()
	{
		this._e_EmployeePermission = default(EntityRef<e_EmployeePermission>);
		this._e_EmployeeRole = default(EntityRef<e_EmployeeRole>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int PermissionId
	{
		get
		{
			return this._PermissionId;
		}
		set
		{
			if ((this._PermissionId != value))
			{
				if (this._e_EmployeePermission.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPermissionIdChanging(value);
				this.SendPropertyChanging();
				this._PermissionId = value;
				this.SendPropertyChanged("PermissionId");
				this.OnPermissionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._e_EmployeeRole.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_EmployeePermission_e_Employee_RolePremission_Mapping", Storage="_e_EmployeePermission", ThisKey="PermissionId", OtherKey="EmployeePermissionId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public e_EmployeePermission e_EmployeePermission
	{
		get
		{
			return this._e_EmployeePermission.Entity;
		}
		set
		{
			e_EmployeePermission previousValue = this._e_EmployeePermission.Entity;
			if (((previousValue != value) 
						|| (this._e_EmployeePermission.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._e_EmployeePermission.Entity = null;
					previousValue.e_Employee_RolePremission_Mapping.Remove(this);
				}
				this._e_EmployeePermission.Entity = value;
				if ((value != null))
				{
					value.e_Employee_RolePremission_Mapping.Add(this);
					this._PermissionId = value.EmployeePermissionId;
				}
				else
				{
					this._PermissionId = default(int);
				}
				this.SendPropertyChanged("e_EmployeePermission");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_EmployeeRole_e_Employee_RolePremission_Mapping", Storage="_e_EmployeeRole", ThisKey="RoleId", OtherKey="EmployeeRoleId", IsForeignKey=true)]
	public e_EmployeeRole e_EmployeeRole
	{
		get
		{
			return this._e_EmployeeRole.Entity;
		}
		set
		{
			e_EmployeeRole previousValue = this._e_EmployeeRole.Entity;
			if (((previousValue != value) 
						|| (this._e_EmployeeRole.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._e_EmployeeRole.Entity = null;
					previousValue.e_Employee_RolePremission_Mapping.Remove(this);
				}
				this._e_EmployeeRole.Entity = value;
				if ((value != null))
				{
					value.e_Employee_RolePremission_Mapping.Add(this);
					this._RoleId = value.EmployeeRoleId;
				}
				else
				{
					this._RoleId = default(int);
				}
				this.SendPropertyChanged("e_EmployeeRole");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_EmployeePermission")]
public partial class e_EmployeePermission : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeePermissionId;
	
	private System.Nullable<int> _ParentId;
	
	private string _Name;
	
	private string _Links;
	
	private string _Area;
	
	private string _Icon;
	
	private System.Nullable<int> _Sort;
	
	private System.Nullable<bool> _Active;
	
	private System.Nullable<bool> _Deleted;
	
	private EntitySet<e_Employee_RolePremission_Mapping> _e_Employee_RolePremission_Mapping;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeePermissionIdChanging(int value);
    partial void OnEmployeePermissionIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLinksChanging(string value);
    partial void OnLinksChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
	
	public e_EmployeePermission()
	{
		this._e_Employee_RolePremission_Mapping = new EntitySet<e_Employee_RolePremission_Mapping>(new Action<e_Employee_RolePremission_Mapping>(this.attach_e_Employee_RolePremission_Mapping), new Action<e_Employee_RolePremission_Mapping>(this.detach_e_Employee_RolePremission_Mapping));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeePermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int EmployeePermissionId
	{
		get
		{
			return this._EmployeePermissionId;
		}
		set
		{
			if ((this._EmployeePermissionId != value))
			{
				this.OnEmployeePermissionIdChanging(value);
				this.SendPropertyChanging();
				this._EmployeePermissionId = value;
				this.SendPropertyChanged("EmployeePermissionId");
				this.OnEmployeePermissionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
	public System.Nullable<int> ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				this.OnParentIdChanging(value);
				this.SendPropertyChanging();
				this._ParentId = value;
				this.SendPropertyChanged("ParentId");
				this.OnParentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Links", DbType="NVarChar(255)")]
	public string Links
	{
		get
		{
			return this._Links;
		}
		set
		{
			if ((this._Links != value))
			{
				this.OnLinksChanging(value);
				this.SendPropertyChanging();
				this._Links = value;
				this.SendPropertyChanged("Links");
				this.OnLinksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(50)")]
	public string Area
	{
		get
		{
			return this._Area;
		}
		set
		{
			if ((this._Area != value))
			{
				this.OnAreaChanging(value);
				this.SendPropertyChanging();
				this._Area = value;
				this.SendPropertyChanged("Area");
				this.OnAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(50)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
	public System.Nullable<int> Sort
	{
		get
		{
			return this._Sort;
		}
		set
		{
			if ((this._Sort != value))
			{
				this.OnSortChanging(value);
				this.SendPropertyChanging();
				this._Sort = value;
				this.SendPropertyChanged("Sort");
				this.OnSortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
	public System.Nullable<bool> Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
	public System.Nullable<bool> Deleted
	{
		get
		{
			return this._Deleted;
		}
		set
		{
			if ((this._Deleted != value))
			{
				this.OnDeletedChanging(value);
				this.SendPropertyChanging();
				this._Deleted = value;
				this.SendPropertyChanged("Deleted");
				this.OnDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_EmployeePermission_e_Employee_RolePremission_Mapping", Storage="_e_Employee_RolePremission_Mapping", ThisKey="EmployeePermissionId", OtherKey="PermissionId")]
	public EntitySet<e_Employee_RolePremission_Mapping> e_Employee_RolePremission_Mapping
	{
		get
		{
			return this._e_Employee_RolePremission_Mapping;
		}
		set
		{
			this._e_Employee_RolePremission_Mapping.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_e_Employee_RolePremission_Mapping(e_Employee_RolePremission_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_EmployeePermission = this;
	}
	
	private void detach_e_Employee_RolePremission_Mapping(e_Employee_RolePremission_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_EmployeePermission = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_EmployeeRole")]
public partial class e_EmployeeRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeRoleId;
	
	private string _Name;
	
	private bool _IsSystemRole;
	
	private EntitySet<e_Employee_RolePremission_Mapping> _e_Employee_RolePremission_Mapping;
	
	private EntitySet<e_EmployeeRole_Mapping> _e_EmployeeRole_Mapping;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeRoleIdChanging(int value);
    partial void OnEmployeeRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsSystemRoleChanging(bool value);
    partial void OnIsSystemRoleChanged();
    #endregion
	
	public e_EmployeeRole()
	{
		this._e_Employee_RolePremission_Mapping = new EntitySet<e_Employee_RolePremission_Mapping>(new Action<e_Employee_RolePremission_Mapping>(this.attach_e_Employee_RolePremission_Mapping), new Action<e_Employee_RolePremission_Mapping>(this.detach_e_Employee_RolePremission_Mapping));
		this._e_EmployeeRole_Mapping = new EntitySet<e_EmployeeRole_Mapping>(new Action<e_EmployeeRole_Mapping>(this.attach_e_EmployeeRole_Mapping), new Action<e_EmployeeRole_Mapping>(this.detach_e_EmployeeRole_Mapping));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EmployeeRoleId
	{
		get
		{
			return this._EmployeeRoleId;
		}
		set
		{
			if ((this._EmployeeRoleId != value))
			{
				this.OnEmployeeRoleIdChanging(value);
				this.SendPropertyChanging();
				this._EmployeeRoleId = value;
				this.SendPropertyChanged("EmployeeRoleId");
				this.OnEmployeeRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(10)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemRole", DbType="Bit NOT NULL")]
	public bool IsSystemRole
	{
		get
		{
			return this._IsSystemRole;
		}
		set
		{
			if ((this._IsSystemRole != value))
			{
				this.OnIsSystemRoleChanging(value);
				this.SendPropertyChanging();
				this._IsSystemRole = value;
				this.SendPropertyChanged("IsSystemRole");
				this.OnIsSystemRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_EmployeeRole_e_Employee_RolePremission_Mapping", Storage="_e_Employee_RolePremission_Mapping", ThisKey="EmployeeRoleId", OtherKey="RoleId")]
	public EntitySet<e_Employee_RolePremission_Mapping> e_Employee_RolePremission_Mapping
	{
		get
		{
			return this._e_Employee_RolePremission_Mapping;
		}
		set
		{
			this._e_Employee_RolePremission_Mapping.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_EmployeeRole_e_EmployeeRole_Mapping", Storage="_e_EmployeeRole_Mapping", ThisKey="EmployeeRoleId", OtherKey="RoleId")]
	public EntitySet<e_EmployeeRole_Mapping> e_EmployeeRole_Mapping
	{
		get
		{
			return this._e_EmployeeRole_Mapping;
		}
		set
		{
			this._e_EmployeeRole_Mapping.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_e_Employee_RolePremission_Mapping(e_Employee_RolePremission_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_EmployeeRole = this;
	}
	
	private void detach_e_Employee_RolePremission_Mapping(e_Employee_RolePremission_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_EmployeeRole = null;
	}
	
	private void attach_e_EmployeeRole_Mapping(e_EmployeeRole_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_EmployeeRole = this;
	}
	
	private void detach_e_EmployeeRole_Mapping(e_EmployeeRole_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_EmployeeRole = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_EmployeeRole_Mapping")]
public partial class e_EmployeeRole_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeId;
	
	private int _RoleId;
	
	private EntityRef<e_EmployeeRole> _e_EmployeeRole;
	
	private EntityRef<e_Employees> _e_Employees;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
	
	public e_EmployeeRole_Mapping()
	{
		this._e_EmployeeRole = default(EntityRef<e_EmployeeRole>);
		this._e_Employees = default(EntityRef<e_Employees>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int EmployeeId
	{
		get
		{
			return this._EmployeeId;
		}
		set
		{
			if ((this._EmployeeId != value))
			{
				if (this._e_Employees.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIdChanging(value);
				this.SendPropertyChanging();
				this._EmployeeId = value;
				this.SendPropertyChanged("EmployeeId");
				this.OnEmployeeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._e_EmployeeRole.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_EmployeeRole_e_EmployeeRole_Mapping", Storage="_e_EmployeeRole", ThisKey="RoleId", OtherKey="EmployeeRoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public e_EmployeeRole e_EmployeeRole
	{
		get
		{
			return this._e_EmployeeRole.Entity;
		}
		set
		{
			e_EmployeeRole previousValue = this._e_EmployeeRole.Entity;
			if (((previousValue != value) 
						|| (this._e_EmployeeRole.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._e_EmployeeRole.Entity = null;
					previousValue.e_EmployeeRole_Mapping.Remove(this);
				}
				this._e_EmployeeRole.Entity = value;
				if ((value != null))
				{
					value.e_EmployeeRole_Mapping.Add(this);
					this._RoleId = value.EmployeeRoleId;
				}
				else
				{
					this._RoleId = default(int);
				}
				this.SendPropertyChanged("e_EmployeeRole");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_Employees_e_EmployeeRole_Mapping", Storage="_e_Employees", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public e_Employees e_Employees
	{
		get
		{
			return this._e_Employees.Entity;
		}
		set
		{
			e_Employees previousValue = this._e_Employees.Entity;
			if (((previousValue != value) 
						|| (this._e_Employees.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._e_Employees.Entity = null;
					previousValue.e_EmployeeRole_Mapping.Remove(this);
				}
				this._e_Employees.Entity = value;
				if ((value != null))
				{
					value.e_EmployeeRole_Mapping.Add(this);
					this._EmployeeId = value.EmployeeId;
				}
				else
				{
					this._EmployeeId = default(int);
				}
				this.SendPropertyChanged("e_Employees");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_SMTPInfo")]
public partial class s_SMTPInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Account;
	
	private string _Password;
	
	private string _Server;
	
	private System.Nullable<int> _Port;
	
	private System.Nullable<bool> _IsSSL;
	
	private string _Name;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnIsSSLChanging(System.Nullable<bool> value);
    partial void OnIsSSLChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public s_SMTPInfo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(255)")]
	public string Account
	{
		get
		{
			return this._Account;
		}
		set
		{
			if ((this._Account != value))
			{
				this.OnAccountChanging(value);
				this.SendPropertyChanging();
				this._Account = value;
				this.SendPropertyChanged("Account");
				this.OnAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="NVarChar(255)")]
	public string Server
	{
		get
		{
			return this._Server;
		}
		set
		{
			if ((this._Server != value))
			{
				this.OnServerChanging(value);
				this.SendPropertyChanging();
				this._Server = value;
				this.SendPropertyChanged("Server");
				this.OnServerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
	public System.Nullable<int> Port
	{
		get
		{
			return this._Port;
		}
		set
		{
			if ((this._Port != value))
			{
				this.OnPortChanging(value);
				this.SendPropertyChanging();
				this._Port = value;
				this.SendPropertyChanged("Port");
				this.OnPortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSSL", DbType="Bit")]
	public System.Nullable<bool> IsSSL
	{
		get
		{
			return this._IsSSL;
		}
		set
		{
			if ((this._IsSSL != value))
			{
				this.OnIsSSLChanging(value);
				this.SendPropertyChanging();
				this._IsSSL = value;
				this.SendPropertyChanged("IsSSL");
				this.OnIsSSLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinglePage")]
public partial class SinglePage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Contents;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public SinglePage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
	public string Contents
	{
		get
		{
			return this._Contents;
		}
		set
		{
			if ((this._Contents != value))
			{
				this.OnContentsChanging(value);
				this.SendPropertyChanging();
				this._Contents = value;
				this.SendPropertyChanged("Contents");
				this.OnContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemSetting")]
public partial class SystemSetting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Contents;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public SystemSetting()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
	public string Contents
	{
		get
		{
			return this._Contents;
		}
		set
		{
			if ((this._Contents != value))
			{
				this.OnContentsChanging(value);
				this.SendPropertyChanging();
				this._Contents = value;
				this.SendPropertyChanged("Contents");
				this.OnContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _PcPic;
	
	private string _MobilePic;
	
	private string _UrlLink;
	
	private int _Sort;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPcPicChanging(string value);
    partial void OnPcPicChanged();
    partial void OnMobilePicChanging(string value);
    partial void OnMobilePicChanged();
    partial void OnUrlLinkChanging(string value);
    partial void OnUrlLinkChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public Banner()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcPic", DbType="NVarChar(MAX)")]
	public string PcPic
	{
		get
		{
			return this._PcPic;
		}
		set
		{
			if ((this._PcPic != value))
			{
				this.OnPcPicChanging(value);
				this.SendPropertyChanging();
				this._PcPic = value;
				this.SendPropertyChanged("PcPic");
				this.OnPcPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePic", DbType="NVarChar(MAX)")]
	public string MobilePic
	{
		get
		{
			return this._MobilePic;
		}
		set
		{
			if ((this._MobilePic != value))
			{
				this.OnMobilePicChanging(value);
				this.SendPropertyChanging();
				this._MobilePic = value;
				this.SendPropertyChanged("MobilePic");
				this.OnMobilePicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLink", DbType="NVarChar(MAX)")]
	public string UrlLink
	{
		get
		{
			return this._UrlLink;
		}
		set
		{
			if ((this._UrlLink != value))
			{
				this.OnUrlLinkChanging(value);
				this.SendPropertyChanging();
				this._UrlLink = value;
				this.SendPropertyChanged("UrlLink");
				this.OnUrlLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
	public int Sort
	{
		get
		{
			return this._Sort;
		}
		set
		{
			if ((this._Sort != value))
			{
				this.OnSortChanging(value);
				this.SendPropertyChanging();
				this._Sort = value;
				this.SendPropertyChanged("Sort");
				this.OnSortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewCount")]
public partial class ViewCount : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.DateTime _ViewDate;
	
	private int _Counts;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnViewDateChanging(System.DateTime value);
    partial void OnViewDateChanged();
    partial void OnCountsChanging(int value);
    partial void OnCountsChanged();
    #endregion
	
	public ViewCount()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewDate", DbType="DateTime NOT NULL")]
	public System.DateTime ViewDate
	{
		get
		{
			return this._ViewDate;
		}
		set
		{
			if ((this._ViewDate != value))
			{
				this.OnViewDateChanging(value);
				this.SendPropertyChanging();
				this._ViewDate = value;
				this.SendPropertyChanged("ViewDate");
				this.OnViewDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counts", DbType="Int NOT NULL")]
	public int Counts
	{
		get
		{
			return this._Counts;
		}
		set
		{
			if ((this._Counts != value))
			{
				this.OnCountsChanging(value);
				this.SendPropertyChanging();
				this._Counts = value;
				this.SendPropertyChanged("Counts");
				this.OnCountsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityContactUser")]
public partial class ActivityContactUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _ActivityId;
	
	private string _ContactName;
	
	private string _ContactPhone;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
	private EntityRef<Activity> _Activity;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public ActivityContactUser()
	{
		this._Activity = default(EntityRef<Activity>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL")]
	public int ActivityId
	{
		get
		{
			return this._ActivityId;
		}
		set
		{
			if ((this._ActivityId != value))
			{
				if (this._Activity.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnActivityIdChanging(value);
				this.SendPropertyChanging();
				this._ActivityId = value;
				this.SendPropertyChanged("ActivityId");
				this.OnActivityIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
	public string ContactName
	{
		get
		{
			return this._ContactName;
		}
		set
		{
			if ((this._ContactName != value))
			{
				this.OnContactNameChanging(value);
				this.SendPropertyChanging();
				this._ContactName = value;
				this.SendPropertyChanged("ContactName");
				this.OnContactNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(50)")]
	public string ContactPhone
	{
		get
		{
			return this._ContactPhone;
		}
		set
		{
			if ((this._ContactPhone != value))
			{
				this.OnContactPhoneChanging(value);
				this.SendPropertyChanging();
				this._ContactPhone = value;
				this.SendPropertyChanged("ContactPhone");
				this.OnContactPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityContactUser", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Activity Activity
	{
		get
		{
			return this._Activity.Entity;
		}
		set
		{
			Activity previousValue = this._Activity.Entity;
			if (((previousValue != value) 
						|| (this._Activity.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Activity.Entity = null;
					previousValue.ActivityContactUser.Remove(this);
				}
				this._Activity.Entity = value;
				if ((value != null))
				{
					value.ActivityContactUser.Add(this);
					this._ActivityId = value.Id;
				}
				else
				{
					this._ActivityId = default(int);
				}
				this.SendPropertyChanged("Activity");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
public partial class News : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Summary;
	
	private string _MainPic;
	
	private string _Contents;
	
	private string _VideoUrl;
	
	private System.DateTime _ReleaseDate;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnMainPicChanging(string value);
    partial void OnMainPicChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnVideoUrlChanging(string value);
    partial void OnVideoUrlChanged();
    partial void OnReleaseDateChanging(System.DateTime value);
    partial void OnReleaseDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public News()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
	public string Summary
	{
		get
		{
			return this._Summary;
		}
		set
		{
			if ((this._Summary != value))
			{
				this.OnSummaryChanging(value);
				this.SendPropertyChanging();
				this._Summary = value;
				this.SendPropertyChanged("Summary");
				this.OnSummaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPic", DbType="NVarChar(500)")]
	public string MainPic
	{
		get
		{
			return this._MainPic;
		}
		set
		{
			if ((this._MainPic != value))
			{
				this.OnMainPicChanging(value);
				this.SendPropertyChanging();
				this._MainPic = value;
				this.SendPropertyChanged("MainPic");
				this.OnMainPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
	public string Contents
	{
		get
		{
			return this._Contents;
		}
		set
		{
			if ((this._Contents != value))
			{
				this.OnContentsChanging(value);
				this.SendPropertyChanging();
				this._Contents = value;
				this.SendPropertyChanged("Contents");
				this.OnContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoUrl", DbType="NVarChar(MAX)")]
	public string VideoUrl
	{
		get
		{
			return this._VideoUrl;
		}
		set
		{
			if ((this._VideoUrl != value))
			{
				this.OnVideoUrlChanging(value);
				this.SendPropertyChanging();
				this._VideoUrl = value;
				this.SendPropertyChanged("VideoUrl");
				this.OnVideoUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime NOT NULL")]
	public System.DateTime ReleaseDate
	{
		get
		{
			return this._ReleaseDate;
		}
		set
		{
			if ((this._ReleaseDate != value))
			{
				this.OnReleaseDateChanging(value);
				this.SendPropertyChanging();
				this._ReleaseDate = value;
				this.SendPropertyChanged("ReleaseDate");
				this.OnReleaseDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Highlights")]
public partial class Highlights : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Summary;
	
	private string _MainPic;
	
	private string _Contents;
	
	private string _VideoUrl;
	
	private System.DateTime _ReleaseDate;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnMainPicChanging(string value);
    partial void OnMainPicChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnVideoUrlChanging(string value);
    partial void OnVideoUrlChanged();
    partial void OnReleaseDateChanging(System.DateTime value);
    partial void OnReleaseDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public Highlights()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
	public string Summary
	{
		get
		{
			return this._Summary;
		}
		set
		{
			if ((this._Summary != value))
			{
				this.OnSummaryChanging(value);
				this.SendPropertyChanging();
				this._Summary = value;
				this.SendPropertyChanged("Summary");
				this.OnSummaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPic", DbType="NVarChar(500)")]
	public string MainPic
	{
		get
		{
			return this._MainPic;
		}
		set
		{
			if ((this._MainPic != value))
			{
				this.OnMainPicChanging(value);
				this.SendPropertyChanging();
				this._MainPic = value;
				this.SendPropertyChanged("MainPic");
				this.OnMainPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
	public string Contents
	{
		get
		{
			return this._Contents;
		}
		set
		{
			if ((this._Contents != value))
			{
				this.OnContentsChanging(value);
				this.SendPropertyChanging();
				this._Contents = value;
				this.SendPropertyChanged("Contents");
				this.OnContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoUrl", DbType="NVarChar(MAX)")]
	public string VideoUrl
	{
		get
		{
			return this._VideoUrl;
		}
		set
		{
			if ((this._VideoUrl != value))
			{
				this.OnVideoUrlChanging(value);
				this.SendPropertyChanging();
				this._VideoUrl = value;
				this.SendPropertyChanged("VideoUrl");
				this.OnVideoUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime NOT NULL")]
	public System.DateTime ReleaseDate
	{
		get
		{
			return this._ReleaseDate;
		}
		set
		{
			if ((this._ReleaseDate != value))
			{
				this.OnReleaseDateChanging(value);
				this.SendPropertyChanging();
				this._ReleaseDate = value;
				this.SendPropertyChanged("ReleaseDate");
				this.OnReleaseDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionGroup")]
public partial class CompetitionGroup : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Account;
	
	private string _LoginPass;
	
	private string _County;
	
	private string _CountyName;
	
	private System.Nullable<int> _TeamTypeId;
	
	private string _ContestCode;
	
	private string _Title;
	
	private string _WorkFile;
	
	private string _AuthorizeFile;
	
	private string _TeachingFile;
	
	private string _RepresentativeConsent;
	
	private System.Nullable<bool> _SignupStatus;
	
	private string _ReturnReason;
	
	private string _ResetToken;
	
	private System.Nullable<System.DateTime> _ExpireDate;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
	private EntitySet<CompetitionGroupReturnLog> _CompetitionGroupReturnLog;
	
	private EntitySet<CompetitionGroupMember> _CompetitionGroupMember;
	
	private EntitySet<FinalCompetition> _FinalCompetition;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnLoginPassChanging(string value);
    partial void OnLoginPassChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountyNameChanging(string value);
    partial void OnCountyNameChanged();
    partial void OnTeamTypeIdChanging(System.Nullable<int> value);
    partial void OnTeamTypeIdChanged();
    partial void OnContestCodeChanging(string value);
    partial void OnContestCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnWorkFileChanging(string value);
    partial void OnWorkFileChanged();
    partial void OnAuthorizeFileChanging(string value);
    partial void OnAuthorizeFileChanged();
    partial void OnTeachingFileChanging(string value);
    partial void OnTeachingFileChanged();
    partial void OnRepresentativeConsentChanging(string value);
    partial void OnRepresentativeConsentChanged();
    partial void OnSignupStatusChanging(System.Nullable<bool> value);
    partial void OnSignupStatusChanged();
    partial void OnReturnReasonChanging(string value);
    partial void OnReturnReasonChanged();
    partial void OnResetTokenChanging(string value);
    partial void OnResetTokenChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public CompetitionGroup()
	{
		this._CompetitionGroupReturnLog = new EntitySet<CompetitionGroupReturnLog>(new Action<CompetitionGroupReturnLog>(this.attach_CompetitionGroupReturnLog), new Action<CompetitionGroupReturnLog>(this.detach_CompetitionGroupReturnLog));
		this._CompetitionGroupMember = new EntitySet<CompetitionGroupMember>(new Action<CompetitionGroupMember>(this.attach_CompetitionGroupMember), new Action<CompetitionGroupMember>(this.detach_CompetitionGroupMember));
		this._FinalCompetition = new EntitySet<FinalCompetition>(new Action<FinalCompetition>(this.attach_FinalCompetition), new Action<FinalCompetition>(this.detach_FinalCompetition));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
	public string Account
	{
		get
		{
			return this._Account;
		}
		set
		{
			if ((this._Account != value))
			{
				this.OnAccountChanging(value);
				this.SendPropertyChanging();
				this._Account = value;
				this.SendPropertyChanged("Account");
				this.OnAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPass", DbType="NVarChar(500)")]
	public string LoginPass
	{
		get
		{
			return this._LoginPass;
		}
		set
		{
			if ((this._LoginPass != value))
			{
				this.OnLoginPassChanging(value);
				this.SendPropertyChanging();
				this._LoginPass = value;
				this.SendPropertyChanged("LoginPass");
				this.OnLoginPassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(50)")]
	public string County
	{
		get
		{
			return this._County;
		}
		set
		{
			if ((this._County != value))
			{
				this.OnCountyChanging(value);
				this.SendPropertyChanging();
				this._County = value;
				this.SendPropertyChanged("County");
				this.OnCountyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountyName", DbType="NVarChar(50)")]
	public string CountyName
	{
		get
		{
			return this._CountyName;
		}
		set
		{
			if ((this._CountyName != value))
			{
				this.OnCountyNameChanging(value);
				this.SendPropertyChanging();
				this._CountyName = value;
				this.SendPropertyChanged("CountyName");
				this.OnCountyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamTypeId", DbType="Int")]
	public System.Nullable<int> TeamTypeId
	{
		get
		{
			return this._TeamTypeId;
		}
		set
		{
			if ((this._TeamTypeId != value))
			{
				this.OnTeamTypeIdChanging(value);
				this.SendPropertyChanging();
				this._TeamTypeId = value;
				this.SendPropertyChanged("TeamTypeId");
				this.OnTeamTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContestCode", DbType="NVarChar(50)")]
	public string ContestCode
	{
		get
		{
			return this._ContestCode;
		}
		set
		{
			if ((this._ContestCode != value))
			{
				this.OnContestCodeChanging(value);
				this.SendPropertyChanging();
				this._ContestCode = value;
				this.SendPropertyChanged("ContestCode");
				this.OnContestCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkFile", DbType="NVarChar(MAX)")]
	public string WorkFile
	{
		get
		{
			return this._WorkFile;
		}
		set
		{
			if ((this._WorkFile != value))
			{
				this.OnWorkFileChanging(value);
				this.SendPropertyChanging();
				this._WorkFile = value;
				this.SendPropertyChanged("WorkFile");
				this.OnWorkFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizeFile", DbType="NVarChar(MAX)")]
	public string AuthorizeFile
	{
		get
		{
			return this._AuthorizeFile;
		}
		set
		{
			if ((this._AuthorizeFile != value))
			{
				this.OnAuthorizeFileChanging(value);
				this.SendPropertyChanging();
				this._AuthorizeFile = value;
				this.SendPropertyChanged("AuthorizeFile");
				this.OnAuthorizeFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingFile", DbType="NVarChar(MAX)")]
	public string TeachingFile
	{
		get
		{
			return this._TeachingFile;
		}
		set
		{
			if ((this._TeachingFile != value))
			{
				this.OnTeachingFileChanging(value);
				this.SendPropertyChanging();
				this._TeachingFile = value;
				this.SendPropertyChanged("TeachingFile");
				this.OnTeachingFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentativeConsent", DbType="NVarChar(MAX)")]
	public string RepresentativeConsent
	{
		get
		{
			return this._RepresentativeConsent;
		}
		set
		{
			if ((this._RepresentativeConsent != value))
			{
				this.OnRepresentativeConsentChanging(value);
				this.SendPropertyChanging();
				this._RepresentativeConsent = value;
				this.SendPropertyChanged("RepresentativeConsent");
				this.OnRepresentativeConsentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignupStatus", DbType="Bit")]
	public System.Nullable<bool> SignupStatus
	{
		get
		{
			return this._SignupStatus;
		}
		set
		{
			if ((this._SignupStatus != value))
			{
				this.OnSignupStatusChanging(value);
				this.SendPropertyChanging();
				this._SignupStatus = value;
				this.SendPropertyChanged("SignupStatus");
				this.OnSignupStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnReason", DbType="NVarChar(500)")]
	public string ReturnReason
	{
		get
		{
			return this._ReturnReason;
		}
		set
		{
			if ((this._ReturnReason != value))
			{
				this.OnReturnReasonChanging(value);
				this.SendPropertyChanging();
				this._ReturnReason = value;
				this.SendPropertyChanged("ReturnReason");
				this.OnReturnReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetToken", DbType="NVarChar(500)")]
	public string ResetToken
	{
		get
		{
			return this._ResetToken;
		}
		set
		{
			if ((this._ResetToken != value))
			{
				this.OnResetTokenChanging(value);
				this.SendPropertyChanging();
				this._ResetToken = value;
				this.SendPropertyChanged("ResetToken");
				this.OnResetTokenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpireDate
	{
		get
		{
			return this._ExpireDate;
		}
		set
		{
			if ((this._ExpireDate != value))
			{
				this.OnExpireDateChanging(value);
				this.SendPropertyChanging();
				this._ExpireDate = value;
				this.SendPropertyChanged("ExpireDate");
				this.OnExpireDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitionGroup_CompetitionGroupReturnLog", Storage="_CompetitionGroupReturnLog", ThisKey="Id", OtherKey="CompetitionGroupId")]
	public EntitySet<CompetitionGroupReturnLog> CompetitionGroupReturnLog
	{
		get
		{
			return this._CompetitionGroupReturnLog;
		}
		set
		{
			this._CompetitionGroupReturnLog.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitionGroup_CompetitionGroupMember", Storage="_CompetitionGroupMember", ThisKey="Id", OtherKey="CompetitionId")]
	public EntitySet<CompetitionGroupMember> CompetitionGroupMember
	{
		get
		{
			return this._CompetitionGroupMember;
		}
		set
		{
			this._CompetitionGroupMember.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitionGroup_FinalCompetition", Storage="_FinalCompetition", ThisKey="Id", OtherKey="CompetitionId")]
	public EntitySet<FinalCompetition> FinalCompetition
	{
		get
		{
			return this._FinalCompetition;
		}
		set
		{
			this._FinalCompetition.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CompetitionGroupReturnLog(CompetitionGroupReturnLog entity)
	{
		this.SendPropertyChanging();
		entity.CompetitionGroup = this;
	}
	
	private void detach_CompetitionGroupReturnLog(CompetitionGroupReturnLog entity)
	{
		this.SendPropertyChanging();
		entity.CompetitionGroup = null;
	}
	
	private void attach_CompetitionGroupMember(CompetitionGroupMember entity)
	{
		this.SendPropertyChanging();
		entity.CompetitionGroup = this;
	}
	
	private void detach_CompetitionGroupMember(CompetitionGroupMember entity)
	{
		this.SendPropertyChanging();
		entity.CompetitionGroup = null;
	}
	
	private void attach_FinalCompetition(FinalCompetition entity)
	{
		this.SendPropertyChanging();
		entity.CompetitionGroup = this;
	}
	
	private void detach_FinalCompetition(FinalCompetition entity)
	{
		this.SendPropertyChanging();
		entity.CompetitionGroup = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionGroupReturnLog")]
public partial class CompetitionGroupReturnLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _CompetitionGroupId;
	
	private string _Contents;
	
	private System.Nullable<System.DateTime> _CreateDate;
	
	private string _CreateUser;
	
	private EntityRef<CompetitionGroup> _CompetitionGroup;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompetitionGroupIdChanging(System.Nullable<int> value);
    partial void OnCompetitionGroupIdChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    #endregion
	
	public CompetitionGroupReturnLog()
	{
		this._CompetitionGroup = default(EntityRef<CompetitionGroup>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitionGroupId", DbType="Int")]
	public System.Nullable<int> CompetitionGroupId
	{
		get
		{
			return this._CompetitionGroupId;
		}
		set
		{
			if ((this._CompetitionGroupId != value))
			{
				if (this._CompetitionGroup.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompetitionGroupIdChanging(value);
				this.SendPropertyChanging();
				this._CompetitionGroupId = value;
				this.SendPropertyChanged("CompetitionGroupId");
				this.OnCompetitionGroupIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
	public string Contents
	{
		get
		{
			return this._Contents;
		}
		set
		{
			if ((this._Contents != value))
			{
				this.OnContentsChanging(value);
				this.SendPropertyChanging();
				this._Contents = value;
				this.SendPropertyChanged("Contents");
				this.OnContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitionGroup_CompetitionGroupReturnLog", Storage="_CompetitionGroup", ThisKey="CompetitionGroupId", OtherKey="Id", IsForeignKey=true)]
	public CompetitionGroup CompetitionGroup
	{
		get
		{
			return this._CompetitionGroup.Entity;
		}
		set
		{
			CompetitionGroup previousValue = this._CompetitionGroup.Entity;
			if (((previousValue != value) 
						|| (this._CompetitionGroup.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompetitionGroup.Entity = null;
					previousValue.CompetitionGroupReturnLog.Remove(this);
				}
				this._CompetitionGroup.Entity = value;
				if ((value != null))
				{
					value.CompetitionGroupReturnLog.Add(this);
					this._CompetitionGroupId = value.Id;
				}
				else
				{
					this._CompetitionGroupId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CompetitionGroup");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_Employees")]
public partial class e_Employees : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeId;
	
	private string _Account;
	
	private string _Password;
	
	private string _Name;
	
	private string _Title;
	
	private string _TitleOfCourtesy;
	
	private System.Nullable<System.DateTime> _BirthDate;
	
	private System.Nullable<System.DateTime> _HireDate;
	
	private string _Address;
	
	private string _Province;
	
	private string _City;
	
	private string _Area;
	
	private string _PostalCode;
	
	private string _Country;
	
	private string _HomePhone;
	
	private string _Phone;
	
	private string _Extension;
	
	private string _Notes;
	
	private System.Nullable<int> _ReportsTo;
	
	private string _PhotoPath;
	
	private int _Status;
	
	private System.Nullable<System.DateTime> _CreateDate;
	
	private string _CreatUser;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private string _ModifyUser;
	
	private System.Nullable<System.DateTime> _PwdChangeDate;
	
	private string _PwdChangeLog;
	
	private EntitySet<e_EmployeeRole_Mapping> _e_EmployeeRole_Mapping;
	
	private EntitySet<e_Employees> _e_Employees2;
	
	private EntityRef<e_Employees> _e_Employees1;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTitleOfCourtesyChanging(string value);
    partial void OnTitleOfCourtesyChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnReportsToChanging(System.Nullable<int> value);
    partial void OnReportsToChanged();
    partial void OnPhotoPathChanging(string value);
    partial void OnPhotoPathChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatUserChanging(string value);
    partial void OnCreatUserChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    partial void OnPwdChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPwdChangeDateChanged();
    partial void OnPwdChangeLogChanging(string value);
    partial void OnPwdChangeLogChanged();
    #endregion
	
	public e_Employees()
	{
		this._e_EmployeeRole_Mapping = new EntitySet<e_EmployeeRole_Mapping>(new Action<e_EmployeeRole_Mapping>(this.attach_e_EmployeeRole_Mapping), new Action<e_EmployeeRole_Mapping>(this.detach_e_EmployeeRole_Mapping));
		this._e_Employees2 = new EntitySet<e_Employees>(new Action<e_Employees>(this.attach_e_Employees2), new Action<e_Employees>(this.detach_e_Employees2));
		this._e_Employees1 = default(EntityRef<e_Employees>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EmployeeId
	{
		get
		{
			return this._EmployeeId;
		}
		set
		{
			if ((this._EmployeeId != value))
			{
				this.OnEmployeeIdChanging(value);
				this.SendPropertyChanging();
				this._EmployeeId = value;
				this.SendPropertyChanged("EmployeeId");
				this.OnEmployeeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
	public string Account
	{
		get
		{
			return this._Account;
		}
		set
		{
			if ((this._Account != value))
			{
				this.OnAccountChanging(value);
				this.SendPropertyChanging();
				this._Account = value;
				this.SendPropertyChanged("Account");
				this.OnAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(30)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleOfCourtesy", DbType="NVarChar(25)")]
	public string TitleOfCourtesy
	{
		get
		{
			return this._TitleOfCourtesy;
		}
		set
		{
			if ((this._TitleOfCourtesy != value))
			{
				this.OnTitleOfCourtesyChanging(value);
				this.SendPropertyChanging();
				this._TitleOfCourtesy = value;
				this.SendPropertyChanged("TitleOfCourtesy");
				this.OnTitleOfCourtesyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> BirthDate
	{
		get
		{
			return this._BirthDate;
		}
		set
		{
			if ((this._BirthDate != value))
			{
				this.OnBirthDateChanging(value);
				this.SendPropertyChanging();
				this._BirthDate = value;
				this.SendPropertyChanged("BirthDate");
				this.OnBirthDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> HireDate
	{
		get
		{
			return this._HireDate;
		}
		set
		{
			if ((this._HireDate != value))
			{
				this.OnHireDateChanging(value);
				this.SendPropertyChanging();
				this._HireDate = value;
				this.SendPropertyChanged("HireDate");
				this.OnHireDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(60)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(15)")]
	public string Province
	{
		get
		{
			return this._Province;
		}
		set
		{
			if ((this._Province != value))
			{
				this.OnProvinceChanging(value);
				this.SendPropertyChanging();
				this._Province = value;
				this.SendPropertyChanged("Province");
				this.OnProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(15)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(15)")]
	public string Area
	{
		get
		{
			return this._Area;
		}
		set
		{
			if ((this._Area != value))
			{
				this.OnAreaChanging(value);
				this.SendPropertyChanging();
				this._Area = value;
				this.SendPropertyChanged("Area");
				this.OnAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10)")]
	public string PostalCode
	{
		get
		{
			return this._PostalCode;
		}
		set
		{
			if ((this._PostalCode != value))
			{
				this.OnPostalCodeChanging(value);
				this.SendPropertyChanging();
				this._PostalCode = value;
				this.SendPropertyChanged("PostalCode");
				this.OnPostalCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(15)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(24)")]
	public string HomePhone
	{
		get
		{
			return this._HomePhone;
		}
		set
		{
			if ((this._HomePhone != value))
			{
				this.OnHomePhoneChanging(value);
				this.SendPropertyChanging();
				this._HomePhone = value;
				this.SendPropertyChanged("HomePhone");
				this.OnHomePhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(60)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(4)")]
	public string Extension
	{
		get
		{
			return this._Extension;
		}
		set
		{
			if ((this._Extension != value))
			{
				this.OnExtensionChanging(value);
				this.SendPropertyChanging();
				this._Extension = value;
				this.SendPropertyChanged("Extension");
				this.OnExtensionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportsTo", DbType="Int")]
	public System.Nullable<int> ReportsTo
	{
		get
		{
			return this._ReportsTo;
		}
		set
		{
			if ((this._ReportsTo != value))
			{
				if (this._e_Employees1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnReportsToChanging(value);
				this.SendPropertyChanging();
				this._ReportsTo = value;
				this.SendPropertyChanged("ReportsTo");
				this.OnReportsToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="NVarChar(255)")]
	public string PhotoPath
	{
		get
		{
			return this._PhotoPath;
		}
		set
		{
			if ((this._PhotoPath != value))
			{
				this.OnPhotoPathChanging(value);
				this.SendPropertyChanging();
				this._PhotoPath = value;
				this.SendPropertyChanged("PhotoPath");
				this.OnPhotoPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
	public int Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatUser", DbType="NVarChar(60)")]
	public string CreatUser
	{
		get
		{
			return this._CreatUser;
		}
		set
		{
			if ((this._CreatUser != value))
			{
				this.OnCreatUserChanging(value);
				this.SendPropertyChanging();
				this._CreatUser = value;
				this.SendPropertyChanged("CreatUser");
				this.OnCreatUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(60)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwdChangeDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PwdChangeDate
	{
		get
		{
			return this._PwdChangeDate;
		}
		set
		{
			if ((this._PwdChangeDate != value))
			{
				this.OnPwdChangeDateChanging(value);
				this.SendPropertyChanging();
				this._PwdChangeDate = value;
				this.SendPropertyChanged("PwdChangeDate");
				this.OnPwdChangeDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwdChangeLog", DbType="NVarChar(MAX)")]
	public string PwdChangeLog
	{
		get
		{
			return this._PwdChangeLog;
		}
		set
		{
			if ((this._PwdChangeLog != value))
			{
				this.OnPwdChangeLogChanging(value);
				this.SendPropertyChanging();
				this._PwdChangeLog = value;
				this.SendPropertyChanged("PwdChangeLog");
				this.OnPwdChangeLogChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_Employees_e_EmployeeRole_Mapping", Storage="_e_EmployeeRole_Mapping", ThisKey="EmployeeId", OtherKey="EmployeeId")]
	public EntitySet<e_EmployeeRole_Mapping> e_EmployeeRole_Mapping
	{
		get
		{
			return this._e_EmployeeRole_Mapping;
		}
		set
		{
			this._e_EmployeeRole_Mapping.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_Employees_e_Employees", Storage="_e_Employees2", ThisKey="EmployeeId", OtherKey="ReportsTo")]
	public EntitySet<e_Employees> e_Employees2
	{
		get
		{
			return this._e_Employees2;
		}
		set
		{
			this._e_Employees2.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_Employees_e_Employees", Storage="_e_Employees1", ThisKey="ReportsTo", OtherKey="EmployeeId", IsForeignKey=true)]
	public e_Employees e_Employees1
	{
		get
		{
			return this._e_Employees1.Entity;
		}
		set
		{
			e_Employees previousValue = this._e_Employees1.Entity;
			if (((previousValue != value) 
						|| (this._e_Employees1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._e_Employees1.Entity = null;
					previousValue.e_Employees2.Remove(this);
				}
				this._e_Employees1.Entity = value;
				if ((value != null))
				{
					value.e_Employees2.Add(this);
					this._ReportsTo = value.EmployeeId;
				}
				else
				{
					this._ReportsTo = default(Nullable<int>);
				}
				this.SendPropertyChanged("e_Employees1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_e_EmployeeRole_Mapping(e_EmployeeRole_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_Employees = this;
	}
	
	private void detach_e_EmployeeRole_Mapping(e_EmployeeRole_Mapping entity)
	{
		this.SendPropertyChanging();
		entity.e_Employees = null;
	}
	
	private void attach_e_Employees2(e_Employees entity)
	{
		this.SendPropertyChanging();
		entity.e_Employees1 = this;
	}
	
	private void detach_e_Employees2(e_Employees entity)
	{
		this.SendPropertyChanging();
		entity.e_Employees1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysLog")]
public partial class SysLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Action;
	
	private string _Account;
	
	private string _IPsource;
	
	private System.DateTime _CreateDate;
	
	private bool _IsSuccess;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnIPsourceChanging(string value);
    partial void OnIPsourceChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsSuccessChanging(bool value);
    partial void OnIsSuccessChanged();
    #endregion
	
	public SysLog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50)")]
	public string Action
	{
		get
		{
			return this._Action;
		}
		set
		{
			if ((this._Action != value))
			{
				this.OnActionChanging(value);
				this.SendPropertyChanging();
				this._Action = value;
				this.SendPropertyChanged("Action");
				this.OnActionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(250)")]
	public string Account
	{
		get
		{
			return this._Account;
		}
		set
		{
			if ((this._Account != value))
			{
				this.OnAccountChanging(value);
				this.SendPropertyChanging();
				this._Account = value;
				this.SendPropertyChanged("Account");
				this.OnAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPsource", DbType="NVarChar(50)")]
	public string IPsource
	{
		get
		{
			return this._IPsource;
		}
		set
		{
			if ((this._IPsource != value))
			{
				this.OnIPsourceChanging(value);
				this.SendPropertyChanging();
				this._IPsource = value;
				this.SendPropertyChanged("IPsource");
				this.OnIPsourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit NOT NULL")]
	public bool IsSuccess
	{
		get
		{
			return this._IsSuccess;
		}
		set
		{
			if ((this._IsSuccess != value))
			{
				this.OnIsSuccessChanging(value);
				this.SendPropertyChanging();
				this._IsSuccess = value;
				this.SendPropertyChanged("IsSuccess");
				this.OnIsSuccessChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionGroupMember")]
public partial class CompetitionGroupMember : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _CompetitionId;
	
	private string _Name;
	
	private string _IdentityNo;
	
	private System.DateTime _Birthday;
	
	private string _Phone;
	
	private string _Mail;
	
	private string _UnitName;
	
	private string _JobTitle;
	
	private bool _IsLeader;
	
	private string _SignArea;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
	private EntityRef<CompetitionGroup> _CompetitionGroup;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompetitionIdChanging(int value);
    partial void OnCompetitionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdentityNoChanging(string value);
    partial void OnIdentityNoChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnIsLeaderChanging(bool value);
    partial void OnIsLeaderChanged();
    partial void OnSignAreaChanging(string value);
    partial void OnSignAreaChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public CompetitionGroupMember()
	{
		this._CompetitionGroup = default(EntityRef<CompetitionGroup>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitionId", DbType="Int NOT NULL")]
	public int CompetitionId
	{
		get
		{
			return this._CompetitionId;
		}
		set
		{
			if ((this._CompetitionId != value))
			{
				if (this._CompetitionGroup.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompetitionIdChanging(value);
				this.SendPropertyChanging();
				this._CompetitionId = value;
				this.SendPropertyChanged("CompetitionId");
				this.OnCompetitionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNo", DbType="NVarChar(50)")]
	public string IdentityNo
	{
		get
		{
			return this._IdentityNo;
		}
		set
		{
			if ((this._IdentityNo != value))
			{
				this.OnIdentityNoChanging(value);
				this.SendPropertyChanging();
				this._IdentityNo = value;
				this.SendPropertyChanged("IdentityNo");
				this.OnIdentityNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime NOT NULL")]
	public System.DateTime Birthday
	{
		get
		{
			return this._Birthday;
		}
		set
		{
			if ((this._Birthday != value))
			{
				this.OnBirthdayChanging(value);
				this.SendPropertyChanging();
				this._Birthday = value;
				this.SendPropertyChanged("Birthday");
				this.OnBirthdayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(200)")]
	public string Mail
	{
		get
		{
			return this._Mail;
		}
		set
		{
			if ((this._Mail != value))
			{
				this.OnMailChanging(value);
				this.SendPropertyChanging();
				this._Mail = value;
				this.SendPropertyChanged("Mail");
				this.OnMailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(100)")]
	public string UnitName
	{
		get
		{
			return this._UnitName;
		}
		set
		{
			if ((this._UnitName != value))
			{
				this.OnUnitNameChanging(value);
				this.SendPropertyChanging();
				this._UnitName = value;
				this.SendPropertyChanged("UnitName");
				this.OnUnitNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(50)")]
	public string JobTitle
	{
		get
		{
			return this._JobTitle;
		}
		set
		{
			if ((this._JobTitle != value))
			{
				this.OnJobTitleChanging(value);
				this.SendPropertyChanging();
				this._JobTitle = value;
				this.SendPropertyChanged("JobTitle");
				this.OnJobTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeader", DbType="Bit NOT NULL")]
	public bool IsLeader
	{
		get
		{
			return this._IsLeader;
		}
		set
		{
			if ((this._IsLeader != value))
			{
				this.OnIsLeaderChanging(value);
				this.SendPropertyChanging();
				this._IsLeader = value;
				this.SendPropertyChanged("IsLeader");
				this.OnIsLeaderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignArea", DbType="NVarChar(100)")]
	public string SignArea
	{
		get
		{
			return this._SignArea;
		}
		set
		{
			if ((this._SignArea != value))
			{
				this.OnSignAreaChanging(value);
				this.SendPropertyChanging();
				this._SignArea = value;
				this.SendPropertyChanged("SignArea");
				this.OnSignAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitionGroup_CompetitionGroupMember", Storage="_CompetitionGroup", ThisKey="CompetitionId", OtherKey="Id", IsForeignKey=true)]
	public CompetitionGroup CompetitionGroup
	{
		get
		{
			return this._CompetitionGroup.Entity;
		}
		set
		{
			CompetitionGroup previousValue = this._CompetitionGroup.Entity;
			if (((previousValue != value) 
						|| (this._CompetitionGroup.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompetitionGroup.Entity = null;
					previousValue.CompetitionGroupMember.Remove(this);
				}
				this._CompetitionGroup.Entity = value;
				if ((value != null))
				{
					value.CompetitionGroupMember.Add(this);
					this._CompetitionId = value.Id;
				}
				else
				{
					this._CompetitionId = default(int);
				}
				this.SendPropertyChanged("CompetitionGroup");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _County;
	
	private string _CountyName;
	
	private System.DateTime _SignupStartDate;
	
	private System.DateTime _SignupEndDate;
	
	private string _IntroduceFile;
	
	private string _OdtFile;
	
	private string _PreliminaryAwardFile;
	
	private string _CommitteeList;
	
	private string _Pics;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
	private System.Nullable<System.DateTime> _FileUploadDate;
	
	private EntitySet<ActivityContactUser> _ActivityContactUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountyNameChanging(string value);
    partial void OnCountyNameChanged();
    partial void OnSignupStartDateChanging(System.DateTime value);
    partial void OnSignupStartDateChanged();
    partial void OnSignupEndDateChanging(System.DateTime value);
    partial void OnSignupEndDateChanged();
    partial void OnIntroduceFileChanging(string value);
    partial void OnIntroduceFileChanged();
    partial void OnOdtFileChanging(string value);
    partial void OnOdtFileChanged();
    partial void OnPreliminaryAwardFileChanging(string value);
    partial void OnPreliminaryAwardFileChanged();
    partial void OnCommitteeListChanging(string value);
    partial void OnCommitteeListChanged();
    partial void OnPicsChanging(string value);
    partial void OnPicsChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    partial void OnFileUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFileUploadDateChanged();
    #endregion
	
	public Activity()
	{
		this._ActivityContactUser = new EntitySet<ActivityContactUser>(new Action<ActivityContactUser>(this.attach_ActivityContactUser), new Action<ActivityContactUser>(this.detach_ActivityContactUser));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(50)")]
	public string County
	{
		get
		{
			return this._County;
		}
		set
		{
			if ((this._County != value))
			{
				this.OnCountyChanging(value);
				this.SendPropertyChanging();
				this._County = value;
				this.SendPropertyChanged("County");
				this.OnCountyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountyName", DbType="NVarChar(50)")]
	public string CountyName
	{
		get
		{
			return this._CountyName;
		}
		set
		{
			if ((this._CountyName != value))
			{
				this.OnCountyNameChanging(value);
				this.SendPropertyChanging();
				this._CountyName = value;
				this.SendPropertyChanged("CountyName");
				this.OnCountyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignupStartDate", DbType="DateTime NOT NULL")]
	public System.DateTime SignupStartDate
	{
		get
		{
			return this._SignupStartDate;
		}
		set
		{
			if ((this._SignupStartDate != value))
			{
				this.OnSignupStartDateChanging(value);
				this.SendPropertyChanging();
				this._SignupStartDate = value;
				this.SendPropertyChanged("SignupStartDate");
				this.OnSignupStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignupEndDate", DbType="DateTime NOT NULL")]
	public System.DateTime SignupEndDate
	{
		get
		{
			return this._SignupEndDate;
		}
		set
		{
			if ((this._SignupEndDate != value))
			{
				this.OnSignupEndDateChanging(value);
				this.SendPropertyChanging();
				this._SignupEndDate = value;
				this.SendPropertyChanged("SignupEndDate");
				this.OnSignupEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroduceFile", DbType="NVarChar(MAX)")]
	public string IntroduceFile
	{
		get
		{
			return this._IntroduceFile;
		}
		set
		{
			if ((this._IntroduceFile != value))
			{
				this.OnIntroduceFileChanging(value);
				this.SendPropertyChanging();
				this._IntroduceFile = value;
				this.SendPropertyChanged("IntroduceFile");
				this.OnIntroduceFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdtFile", DbType="NVarChar(MAX)")]
	public string OdtFile
	{
		get
		{
			return this._OdtFile;
		}
		set
		{
			if ((this._OdtFile != value))
			{
				this.OnOdtFileChanging(value);
				this.SendPropertyChanging();
				this._OdtFile = value;
				this.SendPropertyChanged("OdtFile");
				this.OnOdtFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreliminaryAwardFile", DbType="NVarChar(MAX)")]
	public string PreliminaryAwardFile
	{
		get
		{
			return this._PreliminaryAwardFile;
		}
		set
		{
			if ((this._PreliminaryAwardFile != value))
			{
				this.OnPreliminaryAwardFileChanging(value);
				this.SendPropertyChanging();
				this._PreliminaryAwardFile = value;
				this.SendPropertyChanged("PreliminaryAwardFile");
				this.OnPreliminaryAwardFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitteeList", DbType="NVarChar(MAX)")]
	public string CommitteeList
	{
		get
		{
			return this._CommitteeList;
		}
		set
		{
			if ((this._CommitteeList != value))
			{
				this.OnCommitteeListChanging(value);
				this.SendPropertyChanging();
				this._CommitteeList = value;
				this.SendPropertyChanged("CommitteeList");
				this.OnCommitteeListChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pics", DbType="NVarChar(MAX)")]
	public string Pics
	{
		get
		{
			return this._Pics;
		}
		set
		{
			if ((this._Pics != value))
			{
				this.OnPicsChanging(value);
				this.SendPropertyChanging();
				this._Pics = value;
				this.SendPropertyChanged("Pics");
				this.OnPicsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUploadDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> FileUploadDate
	{
		get
		{
			return this._FileUploadDate;
		}
		set
		{
			if ((this._FileUploadDate != value))
			{
				this.OnFileUploadDateChanging(value);
				this.SendPropertyChanging();
				this._FileUploadDate = value;
				this.SendPropertyChanged("FileUploadDate");
				this.OnFileUploadDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityContactUser", Storage="_ActivityContactUser", ThisKey="Id", OtherKey="ActivityId")]
	public EntitySet<ActivityContactUser> ActivityContactUser
	{
		get
		{
			return this._ActivityContactUser;
		}
		set
		{
			this._ActivityContactUser.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ActivityContactUser(ActivityContactUser entity)
	{
		this.SendPropertyChanging();
		entity.Activity = this;
	}
	
	private void detach_ActivityContactUser(ActivityContactUser entity)
	{
		this.SendPropertyChanging();
		entity.Activity = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinalCompetition")]
public partial class FinalCompetition : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _CompetitionId;
	
	private string _County;
	
	private System.Nullable<int> _CountySort;
	
	private string _Title;
	
	private string _WorkFile;
	
	private string _AuthorizeFile;
	
	private string _TeachingFile;
	
	private string _TeachingVideoFile;
	
	private string _IntroduceFile;
	
	private string _RepresentativeConsent;
	
	private System.DateTime _CreateDate;
	
	private string _CreateUser;
	
	private System.DateTime _ModifyDate;
	
	private string _ModifyUser;
	
	private EntityRef<CompetitionGroup> _CompetitionGroup;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompetitionIdChanging(System.Nullable<int> value);
    partial void OnCompetitionIdChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountySortChanging(System.Nullable<int> value);
    partial void OnCountySortChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnWorkFileChanging(string value);
    partial void OnWorkFileChanged();
    partial void OnAuthorizeFileChanging(string value);
    partial void OnAuthorizeFileChanged();
    partial void OnTeachingFileChanging(string value);
    partial void OnTeachingFileChanged();
    partial void OnTeachingVideoFileChanging(string value);
    partial void OnTeachingVideoFileChanged();
    partial void OnIntroduceFileChanging(string value);
    partial void OnIntroduceFileChanged();
    partial void OnRepresentativeConsentChanging(string value);
    partial void OnRepresentativeConsentChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
	
	public FinalCompetition()
	{
		this._CompetitionGroup = default(EntityRef<CompetitionGroup>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitionId", DbType="Int")]
	public System.Nullable<int> CompetitionId
	{
		get
		{
			return this._CompetitionId;
		}
		set
		{
			if ((this._CompetitionId != value))
			{
				if (this._CompetitionGroup.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompetitionIdChanging(value);
				this.SendPropertyChanging();
				this._CompetitionId = value;
				this.SendPropertyChanged("CompetitionId");
				this.OnCompetitionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(50)")]
	public string County
	{
		get
		{
			return this._County;
		}
		set
		{
			if ((this._County != value))
			{
				this.OnCountyChanging(value);
				this.SendPropertyChanging();
				this._County = value;
				this.SendPropertyChanged("County");
				this.OnCountyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountySort", DbType="Int")]
	public System.Nullable<int> CountySort
	{
		get
		{
			return this._CountySort;
		}
		set
		{
			if ((this._CountySort != value))
			{
				this.OnCountySortChanging(value);
				this.SendPropertyChanging();
				this._CountySort = value;
				this.SendPropertyChanged("CountySort");
				this.OnCountySortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkFile", DbType="NVarChar(MAX)")]
	public string WorkFile
	{
		get
		{
			return this._WorkFile;
		}
		set
		{
			if ((this._WorkFile != value))
			{
				this.OnWorkFileChanging(value);
				this.SendPropertyChanging();
				this._WorkFile = value;
				this.SendPropertyChanged("WorkFile");
				this.OnWorkFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizeFile", DbType="NVarChar(MAX)")]
	public string AuthorizeFile
	{
		get
		{
			return this._AuthorizeFile;
		}
		set
		{
			if ((this._AuthorizeFile != value))
			{
				this.OnAuthorizeFileChanging(value);
				this.SendPropertyChanging();
				this._AuthorizeFile = value;
				this.SendPropertyChanged("AuthorizeFile");
				this.OnAuthorizeFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingFile", DbType="NVarChar(MAX)")]
	public string TeachingFile
	{
		get
		{
			return this._TeachingFile;
		}
		set
		{
			if ((this._TeachingFile != value))
			{
				this.OnTeachingFileChanging(value);
				this.SendPropertyChanging();
				this._TeachingFile = value;
				this.SendPropertyChanged("TeachingFile");
				this.OnTeachingFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingVideoFile", DbType="NVarChar(MAX)")]
	public string TeachingVideoFile
	{
		get
		{
			return this._TeachingVideoFile;
		}
		set
		{
			if ((this._TeachingVideoFile != value))
			{
				this.OnTeachingVideoFileChanging(value);
				this.SendPropertyChanging();
				this._TeachingVideoFile = value;
				this.SendPropertyChanged("TeachingVideoFile");
				this.OnTeachingVideoFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroduceFile", DbType="NVarChar(MAX)")]
	public string IntroduceFile
	{
		get
		{
			return this._IntroduceFile;
		}
		set
		{
			if ((this._IntroduceFile != value))
			{
				this.OnIntroduceFileChanging(value);
				this.SendPropertyChanging();
				this._IntroduceFile = value;
				this.SendPropertyChanged("IntroduceFile");
				this.OnIntroduceFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentativeConsent", DbType="NVarChar(MAX)")]
	public string RepresentativeConsent
	{
		get
		{
			return this._RepresentativeConsent;
		}
		set
		{
			if ((this._RepresentativeConsent != value))
			{
				this.OnRepresentativeConsentChanging(value);
				this.SendPropertyChanging();
				this._RepresentativeConsent = value;
				this.SendPropertyChanged("RepresentativeConsent");
				this.OnRepresentativeConsentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="NVarChar(50)")]
	public string CreateUser
	{
		get
		{
			return this._CreateUser;
		}
		set
		{
			if ((this._CreateUser != value))
			{
				this.OnCreateUserChanging(value);
				this.SendPropertyChanging();
				this._CreateUser = value;
				this.SendPropertyChanged("CreateUser");
				this.OnCreateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(50)")]
	public string ModifyUser
	{
		get
		{
			return this._ModifyUser;
		}
		set
		{
			if ((this._ModifyUser != value))
			{
				this.OnModifyUserChanging(value);
				this.SendPropertyChanging();
				this._ModifyUser = value;
				this.SendPropertyChanged("ModifyUser");
				this.OnModifyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitionGroup_FinalCompetition", Storage="_CompetitionGroup", ThisKey="CompetitionId", OtherKey="Id", IsForeignKey=true)]
	public CompetitionGroup CompetitionGroup
	{
		get
		{
			return this._CompetitionGroup.Entity;
		}
		set
		{
			CompetitionGroup previousValue = this._CompetitionGroup.Entity;
			if (((previousValue != value) 
						|| (this._CompetitionGroup.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompetitionGroup.Entity = null;
					previousValue.FinalCompetition.Remove(this);
				}
				this._CompetitionGroup.Entity = value;
				if ((value != null))
				{
					value.FinalCompetition.Add(this);
					this._CompetitionId = value.Id;
				}
				else
				{
					this._CompetitionId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CompetitionGroup");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
